version: "3.8"
services:
  mysql-db:
    image: mysql:8.0
    env_file: ./.env
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_DATABASE: $MYSQL_DATABASE
    ports:
      - "$MYSQL_LOCAL_PORT:$MYSQL_PORT"
    networks:
      - app-network
    volumes:
      - ./mysql-data:/var/lib/mysql

  nextjs:
    build:
      context: ./my-app # Path to the directory containing your Dockerfile
    ports:
      - "5500:3000" # Expose port 3000 (the default for Next.js)
    volumes:
      - ./my-app:/app # Mount the code from the host to the container
      - /app/node_modules # Avoid mounting node_modules
    # Environment variable (optional if you want to set NODE_ENV)
    environment:
      - NODE_ENV=development
    networks:
      - app-network
    # Restart policy (optional, depends on your deployment needs)
    restart: unless-stopped

  python-api:
    build:
      context: ./ML # Ruta donde se encuentra el Dockerfile para Python
    ports:
      - "5000:5000" # Mapea el puerto del host al contenedor
    volumes:
      - ./ML:/app/
    depends_on:
      - php-app # Define que este servicio depende del de PHP
    networks:
      - app-network # Ambos servicios estar√°n en la misma red

  php-app:
    build:
      context: ./api # Ruta donde se encuentra el Dockerfile para PHP
    depends_on:
      - mysql-db
    links:
      - mysql-db
    ports:
      - "8080:8080" # Mapea el puerto del host al contenedor
    volumes:
      - ./api:/var/www/html/
      - /var/www/html/vendor
    networks:
      - app-network

networks:
  app-network:
    driver: bridge # Red compartida entre los servicios
